%%  Copyright (C) 2014-2018  EPFL
%   ustogo: ultrasound processing Matlab pipeline
%  
%   Permission is hereby granted, free of charge, to any person
%   obtaining a copy of this software and associated documentation
%   files (the "Software"), to deal in the Software without
%   restriction, including without limitation the rights to use,
%   copy, modify, merge, publish, distribute, sublicense, and/or sell
%   copies of the Software, and to permit persons to whom the
%   Software is furnished to do so, subject to the following
%   conditions:
%  
%   The above copyright notice and this permission notice shall be
%   included in all copies or substantial portions of the Software.
%  
%   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%   OTHER DEALINGS IN THE SOFTWARE.
%
%% Saves to disk nappe files from a beamformed image, that "look like" those
%% generated by an RTL simulation or an FPGA run.
%
% Inputs: image - A structure with fields describing the desired output
%                 resolution
%         bf_im - Beamformed image
%         sim_path - Location of the folder where to store the nappe files
%         target_phantom - Phantom name
% 
% Outputs: none
%
% Example usage:
% Run a TopLevel flow to the end.
% SaveNappesToDisk(image, bf_im, dest_dir, ext_target_phantom);

function [] = SaveNappesToDisk(image, bf_im, sim_path, target_phantom)

    if ~exist(sim_path, 'dir')
        error('The following directory for output does not exist: %s', sim_path);
    end
    if ~exist(strcat(sim_path, 'matlab_nappes'), 'dir')
        mkdir(strcat(sim_path, 'matlab_nappes'));
    end
    launch_folder = pwd;
    cd(strcat(sim_path, 'matlab_nappes'));
    
    % TODO does not support images with a trim at the top. Look at ScanConvert3DPhased to see how to add a black strip in the shallow area
    % TODO try to speed this up.
    for	radial_index = 1 : image.radial_lines
        if (mod(radial_index, 20) == 1)
            disp(['Generating nappe files: ' num2str(radial_index) ' of ' num2str(image.radial_lines)]);
        end
        filename = strcat(target_phantom, '_nappe_', num2str(radial_index), '.txt');
        fID = fopen(filename, 'w');        
        for azimuth_index = 1 : image.azimuth_lines
            for elevation_index = 1 : image.elevation_lines
                % The files have a .2 bit fixed-point precision, i.e. 0.25
                fprintf(fID, '%s\n', num2str(round(bf_im(radial_index, azimuth_index, elevation_index) * 4) / 4, '%.2f'));
            end
        end
        fclose(fID);
    end
    
    cd(launch_folder);
    
end